{"version":3,"sources":["../node_modules/sentiment/languages sync /^/.//.*//index$","components/SearchBar/SearchBar.js","components/SongBox/SongBox.js","components/SongsList/SongsList.js","components/App/App.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","SearchBar","props","handleArtistChange","setState","artist","target","value","handleTitleChange","title","handlePlaylistChange","playlist","handleSongSubmit","state","handlePlaylistSubmit","renderSongSubmitButton","loading","color","onClick","renderPlaylistSubmitButton","Side","align","Item","placeholder","this","onChange","Component","SongBox","createTaggedLyrics","cleanedLyrics","sanitize","songInfo","lyrics","words","replace","split","join","taggedLyrics","i","length","sentiment","positive","includes","toLowerCase","negative","__html","showLyrics","showAnalysis","position","size","alt","src","img_url","className","Group","score","comparative","toFixed","Column","subtitle","dangerouslySetInnerHTML","SongsList","songs","style","element","require","App","addSong","songObject","sentimentResult","analyze","newSongs","unshift","error","tokens","playlistID","data","url","process","undefined","console","log","fetch","method","body","JSON","stringify","headers","then","res","json","response","forEach","song","bind","catch","Body","role","aria-label","href","rel","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5e2caecf.chunk.js","sourcesContent":["var map = {\n\t\"./en/index\": 84\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 228;","import React, { Component } from 'react';\n\nimport Level from 'react-bulma-components/lib/components/level';\nimport { Field, Control, Input } from 'react-bulma-components/lib/components/form';\nimport Button from 'react-bulma-components/lib/components/button';\nimport Loader from 'react-bulma-components/lib/components/loader';\n\nclass SearchBar extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            artist: \"\",\n            title: \"\",\n            playlist: \"\"\n        }\n    }\n    handleArtistChange = e => {\n        this.setState({artist: e.target.value});\n    }\n    handleTitleChange = e => {\n        this.setState({title: e.target.value});\n    }\n    handlePlaylistChange = e => {\n        this.setState({playlist: e.target.value});\n    }\n    handleSongSubmit = () => {\n        this.props.handleSongSubmit(this.state.title, this.state.artist);\n    }\n    handlePlaylistSubmit = () => {\n        this.props.handlePlaylistSubmit(this.state.playlist);\n    }\n    renderSongSubmitButton = () => {\n        if (this.props.loading){\n            return(\n                <Loader />\n            );\n        }\n        else{\n            return(\n                <Button color=\"success\" onClick={this.handleSongSubmit}>\n                    search\n                </Button>\n            );\n        }\n    }\n    renderPlaylistSubmitButton = () => {\n        if (this.props.loading){\n            return(\n                <Loader />\n            );\n        }\n        else{\n            return(\n                <Button color=\"success\" onClick={this.handlePlaylistSubmit}>\n                    search\n                </Button>\n            );\n        }\n    }\n\trender(){\n\t\treturn(\n            <Level>\n                <Level.Side align=\"left\">\n                    <Level.Item>\n                        <Field>\n                            <Control>\n                                <Input placeholder=\"song title\" value={this.state.title} onChange={this.handleTitleChange} />\n                            </Control>\n                        </Field>\n                    </Level.Item>\n                    <Level.Item>\n                        <Field>\n                            <Control>\n                                <Input placeholder=\"artist name\" value={this.state.artist} onChange={this.handleArtistChange} />\n                            </Control>\n                        </Field>\n                    </Level.Item>\n                    <Level.Item>\n                       {this.renderSongSubmitButton()}\n                    </Level.Item>\n                </Level.Side>\n                <Level.Side align=\"right\">\n                    <Level.Item>\n                        <Field>\n                            <Control>\n                                <Input placeholder=\"spotify playlist id\" value={this.state.playlist} onChange={this.handlePlaylistChange} />\n                            </Control>\n                        </Field>\n                    </Level.Item>\n                    <Level.Item>\n                       {this.renderPlaylistSubmitButton()}\n                    </Level.Item>\n                </Level.Side>\n            </Level>\n\t\t)\n\t}\n}\n\nexport default SearchBar;\n","import React, { Component } from 'react';\nimport sanitize from 'sanitize-html';\n\nimport Box from 'react-bulma-components/lib/components/box';\nimport Button from 'react-bulma-components/lib/components/button';\nimport Columns from 'react-bulma-components/lib/components/columns';\nimport Content from 'react-bulma-components/lib/components/content';\nimport Heading from 'react-bulma-components/lib/components/heading';\nimport Image from 'react-bulma-components/lib/components/image';\nimport Media from 'react-bulma-components/lib/components/media';\nimport Tag from 'react-bulma-components/lib/components/tag';\n\nclass SongBox extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            showLyrics: false,\n            showAnalysis: false\n        }\n    }\n    createTaggedLyrics = () => {\n        let cleanedLyrics = sanitize(this.props.songInfo.lyrics);\n        cleanedLyrics = cleanedLyrics.replace(/^\\s+|\\s+$/g, '');\n        cleanedLyrics = cleanedLyrics.split(\"\\n\").join(\" <br /> \");\n        let words = cleanedLyrics.split(\" \");\n        let taggedLyrics = \"\";\n        for (let i = 0; i < words.length; i++){\n            if (this.props.songInfo.sentiment.positive.includes(words[i].toLowerCase())){\n                taggedLyrics += \"<span class='has-text-weight-bold has-text-success'>\" + words[i] + \"</span>\";\n            }\n            else if (this.props.songInfo.sentiment.negative.includes(words[i].toLowerCase())){\n                taggedLyrics += \"<span class='has-text-weight-bold has-text-danger'>\" + words[i] + \"</span>\";\n            }\n            else{\n                taggedLyrics += words[i];\n            }\n            taggedLyrics += \" \"\n        }\n        return {__html: taggedLyrics}\n    }\n\trender(){\n\t\treturn(\n            <Box>\n                <Media>\n                    <Media.Item position=\"left\">\n                        <Image size={128} alt=\"album cover!\" src={this.props.songInfo.img_url} />\n                    </Media.Item>\n                    <Media.Item>\n                        <Content>\n                            <Heading>{this.props.songInfo.title} <span className=\"has-text-weight-normal\">by {this.props.songInfo.artist}</span></Heading>\n                            <Tag.Group>\n                                {\n                                    this.props.songInfo.sentiment.score === 0 ? <Tag className=\"is-large\">neutral vibes</Tag> : this.props.songInfo.sentiment.score > 0 ? <Tag color=\"success\">good vibes</Tag> : <Tag color=\"danger\">angery/sad reacts</Tag>\n                                }\n                                <Tag><span>comparative:</span><strong>{this.props.songInfo.sentiment.comparative.toFixed(4)}</strong></Tag>\n                                <Tag><span>raw score:</span><strong>{this.props.songInfo.sentiment.score}</strong></Tag>\n                            </Tag.Group>\n                        </Content>\n                        <Button onClick={() => this.setState({showLyrics: !this.state.showLyrics})}>show lyrics</Button>{\" \"}\n                        <Button onClick={() => this.setState({showAnalysis: !this.state.showAnalysis})}>show analysis</Button>\n                        <Content>\n                        <Columns>\n                        {\n                            this.state.showLyrics &&\n                            <Columns.Column className=\"display-linebreak\">\n                                <hr />\n                                <Heading subtitle>Lyrics</Heading>\n                                <div>\n                                    {this.props.songInfo.lyrics.replace(/^\\s+|\\s+$/g, '')}\n                                </div>\n                            </Columns.Column>\n                        }\n                        {\n                            this.state.showAnalysis &&\n                            <Columns.Column>\n                                <hr />\n                                <Heading subtitle>Analysis</Heading>\n                                <div dangerouslySetInnerHTML={this.createTaggedLyrics()}>\n                                </div>\n                            </Columns.Column >\n                        }\n                        </Columns>\n                    </Content>\n                    </Media.Item>\n                </Media>\n            </Box>\n\t\t)\n\t}\n}\n\nexport default SongBox;\n","import React, { Component } from 'react';\n\nimport Box from 'react-bulma-components/lib/components/box';\nimport Heading from 'react-bulma-components/lib/components/heading';\nimport SongBox from \"../SongBox/SongBox\";\n\nclass SongsList extends Component {\n\trender(){\n        if (this.props.songs.length === 0){\n            return(\n                <Heading className=\"has-text-centered\" style={{\"marginTop\": \"1em\", \"marginBottom\": \"1em\"}}>it's empty. why not search something?</Heading>\n            );\n        }\n        return(\n            <div>\n                {\n                    this.props.songs.map((element, i) => {\n                        if ('error' in element){\n                            return <Box>Couldn't find song :(</Box>\n                        }\n                        return (\n                            <SongBox \n                                songInfo={element}\n                                key={i}\n                            >\n                            </SongBox>\n                        )\n                    })\n                }\n            </div>\n        );\n\t}\n}\n\nexport default SongsList;\n","import React, { Component } from 'react';\nimport './App.scss';\n\nimport Container from 'react-bulma-components/lib/components/container';\nimport Content from 'react-bulma-components/lib/components/content';\nimport Footer from 'react-bulma-components/lib/components/footer';\nimport Heading from 'react-bulma-components/lib/components/heading';\nimport Hero from 'react-bulma-components/lib/components/hero';\nimport Section from 'react-bulma-components/lib/components/section';\nimport Tag from 'react-bulma-components/lib/components/tag';\n\nimport SearchBar from '../SearchBar/SearchBar';\nimport SongsList from '../SongsList/SongsList';\n\nconst Sentiment = require('sentiment');\nconst sentiment = new Sentiment();\n\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      loading: false,\n      error: \"\",\n      songs: [],\n      score: 0,\n      tokens: 0\n    }\n  }\n\n  addSong = songObject => {\n    let sentimentResult = sentiment.analyze(songObject.lyrics.toLowerCase());\n    songObject.sentiment = sentimentResult;\n    let newSongs = this.state.songs;\n    newSongs.unshift(songObject)\n    this.setState({\n      songs: newSongs,\n      error: \"\",\n      score: this.state.score + sentimentResult.score,\n      tokens: this.state.tokens + sentimentResult.tokens.length\n    });\n  }\n\n  handlePlaylistSubmit = playlistID => {\n    this.setState({loading: true});\n    let data = { \"playlist\": playlistID };\n    let url = process.env.REACT_APP_ANGERY_REACTS_SERVER_URL + \"/playlist\";\n    if (url === undefined || url === null){\n      console.log(\"Error: couldn't get server URL. Will default to matt's instance.\")\n      url = \"https://angery-reacts-api.herokuapp.com/playlist\";\n    }\n    fetch(url, {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers:{\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json())\n    .then(response => {\n      if (!('error' in response)){\n        response.songs.forEach(function(song){\n          this.addSong(song);\n        }.bind(this))\n      }\n      else{\n        this.setState({error: response.error});\n      }\n      this.setState({loading: false});\n    })\n    .catch(error => {\n      console.error('Error:', error);\n      this.setState({error: \"error making request!\"});\n      this.setState({loading: false});\n    });\n  }\n\n  handleSongSubmit = (title, artist) => {\n    this.setState({loading: true});\n    let data = {\n      \"title\": title, \n      \"artist\": artist\n    };\n    let url = process.env.REACT_APP_ANGERY_REACTS_SERVER_URL + \"/lyrics\";\n    if (url === undefined || url === null){\n      console.log(\"Error: couldn't get server URL. Will default to matt's instance.\")\n      url = \"https://angery-reacts-api.herokuapp.com/lyrics\";\n    }\n    fetch(url, {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers:{\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json())\n    .then(response => {\n      if (response[\"error\"] !== \"song not found!\"){\n        this.addSong(response);\n      }\n      else{\n        this.setState({error: \"song not found, check your spelling!\"});\n      }\n      this.setState({loading: false});\n    })\n    .catch(error => {\n      console.error('Error:', error);\n      this.setState({error: \"error making request!\"});\n      this.setState({loading: false});\n    });\n  }\n  render(){\n    return (\n      <div className=\"App\">\n        <Hero color=\"info\">\n          <Hero.Body>\n            <Container>\n              <Heading><span role=\"img\" aria-label=\"angry react!\">😡</span> angery reacts</Heading>\n              <Heading subtitle>\n                figure out how positive/negative your music library is\n              </Heading>\n            </Container>\n          </Hero.Body>\n        </Hero>\n        <Section>\n          <Container>\n            <SearchBar \n              loading={this.state.loading} \n              handleSongSubmit={(title, artist) => this.handleSongSubmit(title, artist)}\n              handlePlaylistSubmit={(playlist) => this.handlePlaylistSubmit(playlist)}\n            ></SearchBar>\n            <Heading subtitle className=\"has-text-danger\">\n              {this.state.error}\n            </Heading>\n            <hr />\n            <Tag.Group>\n              {\n                  this.state.score === 0 ? <Tag className=\"is-large\">neutral vibes</Tag> : this.state.score > 0 ? <Tag className=\"is-large\" color=\"success\">good vibes</Tag> : <Tag  className=\"is-large\" color=\"danger\">angery/sad reacts</Tag>\n              }\n              <Tag className=\"is-large\"><span>comparative:</span><strong>{this.state.tokens === 0 ? 0 : (this.state.score/this.state.tokens).toFixed(4)}</strong></Tag>\n              <Tag className=\"is-large\"><span>raw score:</span><strong>{this.state.score}</strong></Tag>\n            </Tag.Group>\n            <hr />\n            <p>\n              <b>raw score</b>: a sum of all the weights of the words in a song (positive weight == positive feeling)\n              <br />\n              <b>comparative</b>: raw score divided by total number of words in song, ranges from -5.0 to 5.0\n            </p>\n            <hr />\n            <SongsList songs={this.state.songs}></SongsList>\n          </Container>\n        </Section>\n        <Footer>\n          <Container>\n            <Content className=\"has-text-centered\">\n              <p>\n                built by <a href=\"https://matthewwang.me\" target=\"_blank\" rel=\"noopener noreferrer\">matt wang!</a> check it out on <a href=\"https://github.com/malsf21/angery-reacts\" target=\"_blank\" rel=\"noopener noreferrer\">github!</a>\n              </p>\n              <p>\n                uses <a href=\"https://reactjs.org\" target=\"_blank\" rel=\"noopener noreferrer\">react</a>, <a href=\"https://bulma.io/\" target=\"_blank\" rel=\"noopener noreferrer\">bulma</a>, <a href=\"https://www.npmjs.com/package/sentiment\" target=\"_blank\" rel=\"noopener noreferrer\">sentiment</a>, and the <a href=\"https://docs.genius.com/\" target=\"_blank\" rel=\"noopener noreferrer\">genius api</a>\n              </p>\n            </Content>\n          </Container>\n        </Footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}